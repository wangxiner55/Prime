<UserControl x:Class="PrimeApp.Appcation.UCreateProjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PrimeApp.Appcation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=local:NewProjects,IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal" 
             TextOptions.TextRenderingMode="Auto"        
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             d:DesignHeight="675" d:DesignWidth="900"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <UserControl.Resources>
        <Style x:Key="MaterialDesignListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="wpf:ListBoxItemAssist.ShowSelection" Value="{Binding (wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="{TemplateBinding Margin}">
                            <Grid>
                                <Border x:Name="MouseOverBorder" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" Opacity="0"/>
                                <Border x:Name="SelectedBorder" Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" Opacity="0"/>
                                <wpf:Ripple x:Name="Ripple" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Focusable="False" Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".56"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding (wpf:ListBoxItemAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/>
                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignListBoxItem}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="wpf:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="False" SnapsToDevicePixels="true">
                            <ScrollViewer ClipToBounds="False" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter ClipToBounds="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <UserControl.DataContext>
        <local:NewProjects/>
    </UserControl.DataContext>
    
    
    
    <materialDesign:DialogHost
        Identifier="RootDialog"
        DialogTheme="Inherit"
        SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">

            <Grid>
                <Grid.Background>
                    <ImageBrush TileMode="Tile" ImageSource="{Binding Path=SelectedItem.ScreenShot , ElementName=ProjectTmeplateListBox}"/>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="7*"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>


                <Border Grid.RowSpan="2" Grid.ColumnSpan="1" Background="Black" Opacity="0.75">
                    
                </Border>
                <ListBox Grid.Row="0" x:Name="ProjectTmeplateListBox" SelectedIndex="0" ItemsSource="{Binding ProjectTemplates}">

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Width="880" Height="90" Opacity="0.8">
                                <Border.Background>
                                    <ImageBrush ImageSource="{Binding ScreenShot}" TileMode="Tile" Stretch="UniformToFill"/>
                                </Border.Background>

                                <TextBlock Text="{Binding ProjectType}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="18" />
                            </Border>
                            
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    
                </ListBox>
                
                
                
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,30,0,0">
                        <TextBlock Text="Name:" Width="50"/>
                        <TextBox Width="550" Text="{Binding ProjectName ,UpdateSourceTrigger=PropertyChanged}" />

                    </StackPanel>

                    <StackPanel Grid.Row="1" Orientation="Horizontal"  HorizontalAlignment="Center" Margin="0,30,0,0">
                        <TextBlock Text="Path  :" Width="50"/>
                        <TextBox Width="450" Text="{Binding ProjectPath, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Content="Brow" Width="100" Height="20" Margin="0,0,0,0"/>
                    </StackPanel>
                    
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,0,0,0">
                        <Button FontSize="18" Content="Create Project" Width="200" Margin="100,0,0,0" BorderThickness="0" IsDefault="True" IsEnabled="{Binding IsValid}" Click="On_Create_Click"/>
                        <Button FontSize="18" Content="Exit Create" Width="200" Margin="100,0,0,0"  BorderThickness="0" IsCancel="True"/>
                    </StackPanel>
                    
                    
                    
                </Grid>

            </Grid>

        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</UserControl>
